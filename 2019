public class NewClass {
    
    public static int mayor_entre_3(int num1, int num2, int num3)
    {
        int mayor = 0;
        
        if(num1 > num2){
           if(num1 > num3){
               // num1 > num2 y num1 > num3
               mayor = num1;
           }
           else{
               // num1 > num2   num3 > num1
               mayor = num3;
           }
        }
        else{
          // num2 > num1
          if(num2 > num3){
                // num2 > num1 y num2 > num3
                mayor = num2;
          }
          else{
               // num2 > num1 y num3 > num2
              mayor = num3;
          }
        }
        return mayor;
    }
    
    public static double promedio_entre_5(int n1, int n2, int n3, int n4, int n5)
    {
        double promedio;
        
        promedio = (n1 + n2 + n3 + n4 + n5) / 5.0;
        
        return promedio;
    }
    
    public static void main(String[] args) //para probar si se programo bien
    {
        System.out.println(mayor_entre_3(15, 12, 9));
        System.out.println(mayor_entre_3(15, 21, 9));
        System.out.println(mayor_entre_3(3, 4, 9));
        
        System.out.println(promedio_entre_5(5, 5, 5, 5, 5));
        System.out.println(promedio_entre_5(5, 3, 2, 1, 0));
        System.out.println(promedio_entre_5(1, 2, 3, 4, 5));
    }
}

---------------------------------------------------------------------------------------------------------------------------------

arreglo de matrices


package damas.chinas;

import java.io.*;

public class ExampleMatrix 
{
    public static int[] pos_pieza_m√°s_adelantada(Board board)
    {
        int f1 = 3, c1 = 4; // esquina inferior izquierda
        int f2 = 3, c2 = 7; // esquina inferior derecha
        int max = 0, dist1, dist2;
        int[] pos = new int[2]; //posicion a devolver
        
        for(int i = 3; i < board.filas; i++) {
            for(int j = 0; i < board.columnas; j++) {
                if(board[i][j] == 1) { //Fichas del jugador 1
                    //distancia a la primera esquina
                    dist1 = Math.abs(i - f1) + Math.abs(j - c1);
                    //distancia a la segunda esquina
                    dist2 = Math.abs(i - f2) + Math.abs(j - c2);
                    
                    if(dist1 < dist2) // usamos dist1
                    {
                        if(dist1 > max) {
                            max = dist1;
                            //fila de la ficha actualmente mas lejana
                            pos[0] = i;
                            //columna d ela fciha actualmente mas lejana
                        }
                    }
                    else {
                        //usamos dist2
                        if(dist2 > max) { 
                            max = dist2;
                            //fila de la ficha actualmente mas lejana
                            pos[0] = i;
                            //columna d ela fciha actualmente mas lejana
                            pos[1] = j;
                        }
                    }
                }
            }
        }
        return pos;
    }
}
